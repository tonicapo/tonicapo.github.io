



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>zeroclipboard/ZeroClipboard.min.js at master Â· zeroclipboard/zeroclipboard</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="zeroclipboard/zeroclipboard" name="twitter:title" /><meta content="zeroclipboard - The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface." name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/2914501?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/2914501?v=2&amp;s=400" property="og:image" /><meta content="zeroclipboard/zeroclipboard" property="og:title" /><meta content="https://github.com/zeroclipboard/zeroclipboard" property="og:url" /><meta content="zeroclipboard - The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface." property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">
    <meta name="pjax-timeout" content="1000">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="599F1DF1:3B41:FF341AE:543415A0" name="octolytics-dimension-request_id" /><meta content="4814234" name="octolytics-actor-id" /><meta content="tonicapo" name="octolytics-actor-login" /><meta content="837182694eee005dca2aaa48c4298a448079936cc7cce4bc7ec59d66b9c4b746" name="octolytics-actor-hash" />
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="4NNAqw6x91x/lTJIGmAcpPjIdnba1i1s7Y2m6ca8wWE9NcHSKEg5R1fve94dvfuhm8r54r9J7OpGcQkFtl4TyQ==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-d869cc784f2cce0181af6b0c8b72679afe6a9c75.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-9ae9325bdf8dd21253fde438acbd4e158d45b029.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="be049ac64248e475594a1e36f3e6bc77">

      
  <meta name="description" content="zeroclipboard - The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface.">
  <meta name="go-import" content="github.com/zeroclipboard/zeroclipboard git https://github.com/zeroclipboard/zeroclipboard.git">

  <meta content="2914501" name="octolytics-dimension-user_id" /><meta content="zeroclipboard" name="octolytics-dimension-user_login" /><meta content="4012085" name="octolytics-dimension-repository_id" /><meta content="zeroclipboard/zeroclipboard" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="4012085" name="octolytics-dimension-repository_network_root_id" /><meta content="zeroclipboard/zeroclipboard" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/zeroclipboard/zeroclipboard/commits/master.atom" rel="alternate" title="Recent Commits to zeroclipboard:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" ga-data-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/zeroclipboard/zeroclipboard/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/zeroclipboard/zeroclipboard/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left" role="navigation">
        <li class="header-nav-item explore">
          <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/tonicapo" data-ga-click="Header, go to profile, text:username">
      <img alt="tonicapo" class="avatar" data-user="4814234" height="20" src="https://avatars2.githubusercontent.com/u/4814234?v=2&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">tonicapo</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="zeroclipboard/zeroclipboard">This repository</span>
    </li>
      <li>
        <a href="/zeroclipboard/zeroclipboard/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
        <span class="mail-status all-read"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="j/l3yGKmuW75WR20H6mHYUK7JaSRTU2V0rq6vQ7A1gh6/zuujp1NDk/vREPYiw4zbo9pv1DlkiwQ7OZOGO5nGA==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

      

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="O8wgXEjO902rO5ZzHEdiO6ejeSX6VEuc9MmjAVIoeA4eVRp6+3h7gXNFn35KS3p1XMMoYBXtwdhoGw/FlNtuJA==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="4012085" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/zeroclipboard/zeroclipboard/watchers">
        198
      </a>
      <a href="/zeroclipboard/zeroclipboard/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container on">

    <form accept-charset="UTF-8" action="/zeroclipboard/zeroclipboard/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="zDBbNYANagLQdWb5nmbOYNZonyI+PFqxIAjmn9up0Sh6QNKHdIJR9R4sSYSEARZ8mADd2CUfzNuuhzm/F944uA==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar zeroclipboard/zeroclipboard">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/zeroclipboard/zeroclipboard/stargazers">
          3,459
        </a>
</form>
    <form accept-charset="UTF-8" action="/zeroclipboard/zeroclipboard/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="LwG+basSCi4d8KJF3NF2W3yZYnKfruApkElXjVLwIX/ElSQevEPG5toHBTA/q2QTSmx/jpPmiYMuu5VVm4uYpg==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star zeroclipboard/zeroclipboard">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/zeroclipboard/zeroclipboard/stargazers">
          3,459
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/zeroclipboard/zeroclipboard/fork" class="minibutton with-count js-toggler-target fork-button tooltipped-n" title="Fork your own copy of zeroclipboard/zeroclipboard to your account" aria-label="Fork your own copy of zeroclipboard/zeroclipboard to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/zeroclipboard/zeroclipboard/network" class="social-count">612</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/zeroclipboard" class="url fn" itemprop="url" rel="author"><span itemprop="title">zeroclipboard</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/zeroclipboard/zeroclipboard" class="js-current-repository js-repo-home-link">zeroclipboard</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" role="navigation" data-issue-count-url="/zeroclipboard/zeroclipboard/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/zeroclipboard/zeroclipboard" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /zeroclipboard/zeroclipboard">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/zeroclipboard/zeroclipboard/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /zeroclipboard/zeroclipboard/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/zeroclipboard/zeroclipboard/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /zeroclipboard/zeroclipboard/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/zeroclipboard/zeroclipboard/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /zeroclipboard/zeroclipboard/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/zeroclipboard/zeroclipboard/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /zeroclipboard/zeroclipboard/pulse/weekly">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/zeroclipboard/zeroclipboard/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /zeroclipboard/zeroclipboard/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/zeroclipboard/zeroclipboard.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/zeroclipboard/zeroclipboard.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="git@github.com:zeroclipboard/zeroclipboard.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:zeroclipboard/zeroclipboard.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/zeroclipboard/zeroclipboard" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/zeroclipboard/zeroclipboard" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/zeroclipboard/zeroclipboard" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save zeroclipboard/zeroclipboard to your computer and use it in GitHub Desktop." aria-label="Save zeroclipboard/zeroclipboard to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/zeroclipboard/zeroclipboard/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of zeroclipboard/zeroclipboard as a zip file"
                   title="Download the contents of zeroclipboard/zeroclipboard as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/zeroclipboard/zeroclipboard/blob/a8fdd636b9c9b1efc7ba6ae8fc3ad09d9ca657cd/dist/ZeroClipboard.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:95adfe5819882f4eeaa889ddf0851f01 -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/blob/1.x-master/dist/ZeroClipboard.min.js"
                 data-name="1.x-master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="1.x-master">1.x-master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/blob/master/dist/ZeroClipboard.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.1.6/dist/ZeroClipboard.min.js"
                 data-name="v2.1.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.6">v2.1.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.1.5/dist/ZeroClipboard.min.js"
                 data-name="v2.1.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.5">v2.1.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.1.4/dist/ZeroClipboard.min.js"
                 data-name="v2.1.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.4">v2.1.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.1.3/dist/ZeroClipboard.min.js"
                 data-name="v2.1.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.3">v2.1.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.1.2/dist/ZeroClipboard.min.js"
                 data-name="v2.1.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.2">v2.1.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.1.1/dist/ZeroClipboard.min.js"
                 data-name="v2.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.1">v2.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.1.0/dist/ZeroClipboard.min.js"
                 data-name="v2.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.1.0">v2.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.3/dist/ZeroClipboard.min.js"
                 data-name="v2.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.3">v2.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.2/dist/ZeroClipboard.min.js"
                 data-name="v2.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.2">v2.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.1/dist/ZeroClipboard.min.js"
                 data-name="v2.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.1">v2.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0-beta.8/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0-beta.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0-beta.8">v2.0.0-beta.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0-beta.7/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0-beta.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0-beta.7">v2.0.0-beta.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0-beta.6/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0-beta.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0-beta.6">v2.0.0-beta.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0-beta.5/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0-beta.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0-beta.5">v2.0.0-beta.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0-beta.4/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0-beta.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0-beta.4">v2.0.0-beta.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0-beta.3/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0-beta.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0-beta.3">v2.0.0-beta.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0-beta.2/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0-beta.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0-beta.2">v2.0.0-beta.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0-beta.1/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0-beta.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0-beta.1">v2.0.0-beta.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v2.0.0/dist/ZeroClipboard.min.js"
                 data-name="v2.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0.0">v2.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.3.5/dist/ZeroClipboard.min.js"
                 data-name="v1.3.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.5">v1.3.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.3.4/dist/ZeroClipboard.min.js"
                 data-name="v1.3.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.4">v1.3.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.3.3/dist/ZeroClipboard.min.js"
                 data-name="v1.3.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.3">v1.3.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.3.2/dist/ZeroClipboard.min.js"
                 data-name="v1.3.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.2">v1.3.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.3.1/dist/ZeroClipboard.min.js"
                 data-name="v1.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.1">v1.3.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.3.0-beta.1/dist/ZeroClipboard.min.js"
                 data-name="v1.3.0-beta.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.0-beta.1">v1.3.0-beta.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.3.0/dist/ZeroClipboard.min.js"
                 data-name="v1.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.3.0">v1.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.2.3/dist/ZeroClipboard.min.js"
                 data-name="v1.2.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.3">v1.2.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.2.2/dist/ZeroClipboard.min.js"
                 data-name="v1.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.2">v1.2.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.2.1/dist/ZeroClipboard.min.js"
                 data-name="v1.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.1">v1.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.2.0-beta.3/dist/ZeroClipboard.min.js"
                 data-name="v1.2.0-beta.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.0-beta.3">v1.2.0-beta.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.2.0-beta.2/dist/ZeroClipboard.min.js"
                 data-name="v1.2.0-beta.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.0-beta.2">v1.2.0-beta.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.2.0-beta.1/dist/ZeroClipboard.min.js"
                 data-name="v1.2.0-beta.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.0-beta.1">v1.2.0-beta.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.2.0/dist/ZeroClipboard.min.js"
                 data-name="v1.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.2.0">v1.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.1.7/dist/ZeroClipboard.min.js"
                 data-name="v1.1.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.7">v1.1.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.1.6/dist/ZeroClipboard.min.js"
                 data-name="v1.1.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.6">v1.1.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.1.5/dist/ZeroClipboard.min.js"
                 data-name="v1.1.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.5">v1.1.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.1.4/dist/ZeroClipboard.min.js"
                 data-name="v1.1.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.4">v1.1.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.1.3/dist/ZeroClipboard.min.js"
                 data-name="v1.1.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.3">v1.1.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.1.2/dist/ZeroClipboard.min.js"
                 data-name="v1.1.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.2">v1.1.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.1.1/dist/ZeroClipboard.min.js"
                 data-name="v1.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.1">v1.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.1.0/dist/ZeroClipboard.min.js"
                 data-name="v1.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.1.0">v1.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.0.9/dist/ZeroClipboard.min.js"
                 data-name="v1.0.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.9">v1.0.9</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.0.8/dist/ZeroClipboard.min.js"
                 data-name="v1.0.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.8">v1.0.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/v1.0.7/dist/ZeroClipboard.min.js"
                 data-name="v1.0.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0.7">v1.0.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/zeroclipboard/zeroclipboard/tree/1.2.3/dist/ZeroClipboard.min.js"
                 data-name="1.2.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="1.2.3">1.2.3</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/zeroclipboard/zeroclipboard/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="dist/ZeroClipboard.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/zeroclipboard/zeroclipboard" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">zeroclipboard</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/zeroclipboard/zeroclipboard/tree/master/dist" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">dist</span></a></span><span class="separator"> / </span><strong class="final-path">ZeroClipboard.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="James M. Greene" class="avatar" data-user="417751" height="24" src="https://avatars1.githubusercontent.com/u/417751?v=2&amp;s=48" width="24" />
        <span class="author"><a href="/JamesMGreene" rel="contributor">JamesMGreene</a></span>
        <time datetime="2014-07-27T01:38:43-05:00" is="relative-time">July 27, 2014</time>
        <div class="commit-title">
            <a href="/zeroclipboard/zeroclipboard/commit/e4f6ab73861924341792aa671592cdcb45d6e5cc" class="message" data-pjax="true" title="v2.1.6">v2.1.6</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="James M. Greene" data-user="417751" height="24" src="https://avatars1.githubusercontent.com/u/417751?v=2&amp;s=48" width="24" />
            <a href="/JamesMGreene">JamesMGreene</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>10 lines (10 sloc)</span>
          <span class="meta-divider"></span>
        <span>25.583 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/zeroclipboard/zeroclipboard/raw/master/dist/ZeroClipboard.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/zeroclipboard/zeroclipboard/blame/master/dist/ZeroClipboard.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/zeroclipboard/zeroclipboard/commits/master/dist/ZeroClipboard.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw js-conduit-openfile-check"
             href="http://mac.github.com"
             data-url="github-mac://openRepo/https://github.com/zeroclipboard/zeroclipboard?branch=master&amp;filepath=dist%2FZeroClipboard.min.js"
             aria-label="Open this file in GitHub for Mac"
             data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/zeroclipboard/zeroclipboard/edit/master/dist/ZeroClipboard.min.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/zeroclipboard/zeroclipboard/delete/master/dist/ZeroClipboard.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="cm">/*!</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="cm"> * ZeroClipboard</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="cm"> * The ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface.</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="cm"> * Copyright (c) 2014 Jon Rohan, James M. Greene</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="cm"> * Licensed MIT</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="cm"> * http://zeroclipboard.org/</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="cm"> * v2.1.6</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line"><span class="cm"> */</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">navigator</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">encodeURIComponent</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">ActiveXObject</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Error</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Number</span><span class="p">.</span><span class="nb">parseInt</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nb">parseInt</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Number</span><span class="p">.</span><span class="nb">parseFloat</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nb">parseFloat</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Number</span><span class="p">.</span><span class="nb">isNaN</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nb">isNaN</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">wrap</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">.</span><span class="nx">unwrap</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">unwrap</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">unwrap</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}(),</span><span class="nx">v</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">)},</span><span class="nx">w</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">]))</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">i</span><span class="o">!==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">));</span><span class="k">return</span> <span class="nx">i</span><span class="p">},</span><span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]));</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]))}</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="mi">9</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">))</span><span class="k">do</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)),</span><span class="nx">b</span><span class="p">},</span><span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(?:|[^:@]*@|.+\)@(?=http[s]?|file)|.+?\s+(?: at |@)(?:[^:\(]+ )*[\(]?)((?:http[s]?|file):\/\/[\/]?.+?\/[^:\)]*?)(?::\d+)(?::\d+)?/</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\)@((?:http[s]?|file):\/\/[\/]?.+?\/[^:\)]*?)(?::\d+)(?::\d+)?/</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]))),</span><span class="nx">b</span><span class="p">},</span><span class="nx">E</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">k</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">sourceURL</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">fileName</span><span class="o">||</span><span class="nx">D</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stack</span><span class="p">)),</span><span class="nx">a</span><span class="p">},</span><span class="nx">F</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">currentScript</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">currentScript</span><span class="p">.</span><span class="nx">src</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">),</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">src</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;readyState&quot;</span><span class="k">in</span> <span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;interactive&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">readyState</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">src</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;loading&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">readyState</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">src</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">E</span><span class="p">())</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">G</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">src</span><span class="p">)){</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">break</span><span class="p">}}</span><span class="k">return</span> <span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">},</span><span class="nx">H</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">F</span><span class="p">())</span><span class="o">||</span><span class="nx">G</span><span class="p">()</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="s2">&quot;ZeroClipboard.swf&quot;</span><span class="p">},</span><span class="nx">I</span><span class="o">=</span><span class="p">{</span><span class="nx">bridge</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;0.0.0&quot;</span><span class="p">,</span><span class="nx">pluginType</span><span class="o">:</span><span class="s2">&quot;unknown&quot;</span><span class="p">,</span><span class="nx">disabled</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">outdated</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">unavailable</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">deactivated</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">overdue</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">ready</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">J</span><span class="o">=</span><span class="s2">&quot;11.0.0&quot;</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="p">{},</span><span class="nx">L</span><span class="o">=</span><span class="p">{},</span><span class="nx">M</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="p">{</span><span class="nx">ready</span><span class="o">:</span><span class="s2">&quot;Flash communication is established&quot;</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;flash-disabled&quot;</span><span class="o">:</span><span class="s2">&quot;Flash is disabled or not installed&quot;</span><span class="p">,</span><span class="s2">&quot;flash-outdated&quot;</span><span class="o">:</span><span class="s2">&quot;Flash is too outdated to support ZeroClipboard&quot;</span><span class="p">,</span><span class="s2">&quot;flash-unavailable&quot;</span><span class="o">:</span><span class="s2">&quot;Flash is unable to communicate bidirectionally with JavaScript&quot;</span><span class="p">,</span><span class="s2">&quot;flash-deactivated&quot;</span><span class="o">:</span><span class="s2">&quot;Flash is too outdated for your browser and/or is configured as click-to-activate&quot;</span><span class="p">,</span><span class="s2">&quot;flash-overdue&quot;</span><span class="o">:</span><span class="s2">&quot;Flash communication was established but NOT within the acceptable time limit&quot;</span><span class="p">}},</span><span class="nx">O</span><span class="o">=</span><span class="p">{</span><span class="nx">swfPath</span><span class="o">:</span><span class="nx">H</span><span class="p">(),</span><span class="nx">trustedDomains</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="o">?</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="p">]</span><span class="o">:</span><span class="p">[],</span><span class="nx">cacheBust</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">forceEnhancedClipboard</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">flashLoadTimeout</span><span class="o">:</span><span class="mi">3</span><span class="nx">e4</span><span class="p">,</span><span class="nx">autoActivate</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">bubbleEvents</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">containerId</span><span class="o">:</span><span class="s2">&quot;global-zeroclipboard-html-bridge&quot;</span><span class="p">,</span><span class="nx">containerClass</span><span class="o">:</span><span class="s2">&quot;global-zeroclipboard-container&quot;</span><span class="p">,</span><span class="nx">swfObjectId</span><span class="o">:</span><span class="s2">&quot;global-zeroclipboard-flash-bridge&quot;</span><span class="p">,</span><span class="nx">hoverClass</span><span class="o">:</span><span class="s2">&quot;zeroclipboard-is-hover&quot;</span><span class="p">,</span><span class="nx">activeClass</span><span class="o">:</span><span class="s2">&quot;zeroclipboard-is-active&quot;</span><span class="p">,</span><span class="nx">forceHandCursor</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">999999999</span><span class="p">},</span><span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="sr">/^(?:forceHandCursor|title|zIndex|bubbleEvents)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">O</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;containerId&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;swfObjectId&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">cb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;The specified `&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;` value is not valid as an HTML4 Element ID&quot;</span><span class="p">);</span><span class="nx">O</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="k">else</span> <span class="nx">O</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];{</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">O</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">O</span><span class="p">[</span><span class="nx">a</span><span class="p">]}},</span><span class="nx">Q</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">browser</span><span class="o">:</span><span class="nx">y</span><span class="p">(</span><span class="nx">g</span><span class="p">,[</span><span class="s2">&quot;userAgent&quot;</span><span class="p">,</span><span class="s2">&quot;platform&quot;</span><span class="p">,</span><span class="s2">&quot;appName&quot;</span><span class="p">]),</span><span class="nx">flash</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">I</span><span class="p">,[</span><span class="s2">&quot;bridge&quot;</span><span class="p">]),</span><span class="nx">zeroclipboard</span><span class="o">:</span><span class="p">{</span><span class="nx">version</span><span class="o">:</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">version</span><span class="p">,</span><span class="nx">config</span><span class="o">:</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">config</span><span class="p">()}}},</span><span class="nx">R</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">disabled</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">outdated</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">unavailable</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">deactivated</span><span class="p">)},</span><span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">K</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">K</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="nx">K</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">ready</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">ready</span><span class="o">&amp;&amp;</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">emit</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;ready&quot;</span><span class="p">}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">error</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;disabled&quot;</span><span class="p">,</span><span class="s2">&quot;outdated&quot;</span><span class="p">,</span><span class="s2">&quot;unavailable&quot;</span><span class="p">,</span><span class="s2">&quot;deactivated&quot;</span><span class="p">,</span><span class="s2">&quot;overdue&quot;</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]]</span><span class="o">===!</span><span class="mi">0</span><span class="p">){</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">emit</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;flash-&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]});</span><span class="k">break</span><span class="p">}}}</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">},</span><span class="nx">T</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">q</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">K</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">e</span><span class="p">;)</span><span class="nx">g</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">},</span><span class="nx">U</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">?</span><span class="nx">x</span><span class="p">(</span><span class="nx">K</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">||</span><span class="kc">null</span><span class="o">:</span><span class="nx">x</span><span class="p">(</span><span class="nx">K</span><span class="p">)},</span><span class="nx">V</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">jb</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;ready&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">overdue</span><span class="o">===!</span><span class="mi">0</span><span class="o">?</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">emit</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;flash-overdue&quot;</span><span class="p">})</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">),</span><span class="nx">ib</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="s2">&quot;copy&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">pb</span><span class="p">(</span><span class="nx">L</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">formatMap</span><span class="p">),</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">W</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;boolean&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">I</span><span class="p">.</span><span class="nx">ready</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">isFlashUnusable</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">===</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">flashLoadTimeout</span><span class="p">;</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;boolean&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">I</span><span class="p">.</span><span class="nx">deactivated</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">deactivated</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">I</span><span class="p">.</span><span class="nx">deactivated</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">emit</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;flash-deactivated&quot;</span><span class="p">})},</span><span class="nx">a</span><span class="p">),</span><span class="nx">I</span><span class="p">.</span><span class="nx">overdue</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">nb</span><span class="p">()}},</span><span class="nx">X</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">clearData</span><span class="p">(),</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">blur</span><span class="p">(),</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">),</span><span class="nx">ob</span><span class="p">(),</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">off</span><span class="p">()},</span><span class="nx">Y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">clearData</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">L</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">])},</span><span class="nx">Z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="nx">L</span><span class="p">),</span><span class="nx">M</span><span class="o">=</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">L</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">x</span><span class="p">(</span><span class="nx">L</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">L</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">_</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">xb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">O</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">),</span><span class="nx">c</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">xb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">O</span><span class="p">.</span><span class="nx">hoverClass</span><span class="p">)),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">wb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">O</span><span class="p">.</span><span class="nx">hoverClass</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">O</span><span class="p">.</span><span class="nx">title</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">mb</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">);</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">forceHandCursor</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="s2">&quot;pointer&quot;</span><span class="o">===</span><span class="nx">yb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;cursor&quot;</span><span class="p">);</span><span class="nx">Cb</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">Bb</span><span class="p">()}},</span><span class="nx">ab</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">mb</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-9999px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;1px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;1px&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">xb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">O</span><span class="p">.</span><span class="nx">hoverClass</span><span class="p">),</span><span class="nx">xb</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">O</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="nx">bb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">},</span><span class="nx">cb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="sr">/^[A-Za-z][A-Za-z0-9_:\-\.]*$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">db</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">{})</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">),</span><span class="nx">b</span><span class="p">){</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="sr">/^(copy|aftercopy|_click)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">d</span><span class="p">),</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">target</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">relatedTarget</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">currentTarget</span><span class="o">:</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">timeStamp</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">||</span><span class="nx">p</span><span class="p">()</span><span class="o">||</span><span class="kc">null</span><span class="p">});</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">N</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">];</span><span class="k">return</span><span class="s2">&quot;error&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">]),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nx">e</span><span class="p">),</span><span class="s2">&quot;ready&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">target</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">version</span><span class="p">}),</span><span class="s2">&quot;error&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="sr">/^flash-(disabled|outdated|unavailable|deactivated|overdue)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">target</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">minimumVersion</span><span class="o">:</span><span class="nx">J</span><span class="p">}),</span><span class="sr">/^flash-(outdated|unavailable|deactivated|overdue)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">version</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">version</span><span class="p">})),</span><span class="s2">&quot;copy&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipboardData</span><span class="o">=</span><span class="p">{</span><span class="nx">setData</span><span class="o">:</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">setData</span><span class="p">,</span><span class="nx">clearData</span><span class="o">:</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">clearData</span><span class="p">}),</span><span class="s2">&quot;aftercopy&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">qb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">M</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">=</span><span class="nx">eb</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">fb</span><span class="p">(</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">eb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-clipboard-target&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">fb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="sr">/^_(?:click|mouse(?:over|out|down|up|move))$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;_mouseover&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;_mouseout&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">Ab</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">screenLeft</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">screenX</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">screenTop</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">screenY</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">_stageX</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">_stageX</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">_stageY</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">_stageY</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">m</span><span class="o">-</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">n</span><span class="o">-</span><span class="nx">l</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">i</span><span class="o">+</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="nx">p</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">movementX</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">movementX</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">movementY</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">movementY</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">_stageX</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">_stageY</span><span class="p">,</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">srcElement</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">fromElement</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">toElement</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">screenX</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">screenY</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">pageX</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">pageY</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">clientX</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">clientY</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">movementX</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">movementY</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">offsetX</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">offsetY</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">layerX</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">layerY</span><span class="o">:</span><span class="mi">0</span><span class="p">})}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">gb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="sr">/^(?:(?:before)?copy|destroy)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">hb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">?</span><span class="nx">h</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">ib</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">gb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">K</span><span class="p">[</span><span class="s2">&quot;*&quot;</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="nx">K</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]),</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">handleEvent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">handleEvent</span><span class="p">),</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">),</span><span class="nx">hb</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,[</span><span class="nx">k</span><span class="p">],</span><span class="nx">b</span><span class="p">))}</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">jb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="nx">c</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;swf&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">_source</span><span class="p">;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">_source</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;flash-disabled&quot;</span><span class="p">,</span><span class="s2">&quot;flash-outdated&quot;</span><span class="p">,</span><span class="s2">&quot;flash-unavailable&quot;</span><span class="p">,</span><span class="s2">&quot;flash-deactivated&quot;</span><span class="p">,</span><span class="s2">&quot;flash-overdue&quot;</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;error&quot;</span><span class="o">:-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="nx">I</span><span class="p">,{</span><span class="nx">disabled</span><span class="o">:</span><span class="s2">&quot;flash-disabled&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">outdated</span><span class="o">:</span><span class="s2">&quot;flash-outdated&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">unavailable</span><span class="o">:</span><span class="s2">&quot;flash-unavailable&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">deactivated</span><span class="o">:</span><span class="s2">&quot;flash-deactivated&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">overdue</span><span class="o">:</span><span class="s2">&quot;flash-overdue&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">ready</span><span class="o">:!</span><span class="mi">1</span><span class="p">});</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;ready&quot;</span><span class="o">:</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">deactivated</span><span class="o">===!</span><span class="mi">0</span><span class="p">;</span><span class="nx">w</span><span class="p">(</span><span class="nx">I</span><span class="p">,{</span><span class="nx">disabled</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">outdated</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">unavailable</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">deactivated</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">overdue</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">ready</span><span class="o">:!</span><span class="nx">g</span><span class="p">});</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;beforecopy&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;copy&quot;</span><span class="o">:</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">;</span><span class="o">!</span><span class="nx">L</span><span class="p">[</span><span class="s2">&quot;text/html&quot;</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">L</span><span class="p">[</span><span class="s2">&quot;text/plain&quot;</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">value</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">outerHTML</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">value</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">textContent</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">innerText</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipboardData</span><span class="p">.</span><span class="nx">clearData</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipboardData</span><span class="p">.</span><span class="nx">setData</span><span class="p">(</span><span class="s2">&quot;text/plain&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">i</span><span class="o">!==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipboardData</span><span class="p">.</span><span class="nx">setData</span><span class="p">(</span><span class="s2">&quot;text/html&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">))</span><span class="o">:!</span><span class="nx">L</span><span class="p">[</span><span class="s2">&quot;text/plain&quot;</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-clipboard-text&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipboardData</span><span class="p">.</span><span class="nx">clearData</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipboardData</span><span class="p">.</span><span class="nx">setData</span><span class="p">(</span><span class="s2">&quot;text/plain&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;aftercopy&quot;</span><span class="o">:</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">clearData</span><span class="p">(),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">vb</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">focus</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;_mouseover&quot;</span><span class="o">:</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">focus</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">O</span><span class="p">.</span><span class="nx">bubbleEvents</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">&amp;&amp;!</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">kb</span><span class="p">(</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="nx">bubbles</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">cancelable</span><span class="o">:!</span><span class="mi">1</span><span class="p">})),</span><span class="nx">kb</span><span class="p">(</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;mouseover&quot;</span><span class="p">})));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;_mouseout&quot;</span><span class="o">:</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">blur</span><span class="p">(),</span><span class="nx">O</span><span class="p">.</span><span class="nx">bubbleEvents</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">&amp;&amp;!</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">kb</span><span class="p">(</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">bubbles</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">cancelable</span><span class="o">:!</span><span class="mi">1</span><span class="p">})),</span><span class="nx">kb</span><span class="p">(</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;mouseout&quot;</span><span class="p">})));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;_mousedown&quot;</span><span class="o">:</span><span class="nx">wb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">O</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">),</span><span class="nx">O</span><span class="p">.</span><span class="nx">bubbleEvents</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">kb</span><span class="p">(</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)}));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;_mouseup&quot;</span><span class="o">:</span><span class="nx">xb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">O</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">),</span><span class="nx">O</span><span class="p">.</span><span class="nx">bubbleEvents</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">kb</span><span class="p">(</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)}));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;_click&quot;</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">O</span><span class="p">.</span><span class="nx">bubbleEvents</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">kb</span><span class="p">(</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)}));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;_mousemove&quot;</span><span class="o">:</span><span class="nx">O</span><span class="p">.</span><span class="nx">bubbleEvents</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">kb</span><span class="p">(</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)}))}</span><span class="k">return</span><span class="sr">/^_(?:click|mouse(?:over|out|down|up|move))$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">kb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="o">||</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">view</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">defaultView</span><span class="o">||</span><span class="nx">e</span><span class="p">,</span><span class="nx">canBubble</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">cancelable</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">detail</span><span class="o">:</span><span class="s2">&quot;click&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">button</span><span class="o">:</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">button</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">createEvent</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">h</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">createEvent</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">canBubble</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">cancelable</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">view</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">detail</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">screenX</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">screenY</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">clientX</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">clientY</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">altKey</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">shiftKey</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">metaKey</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">button</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;MouseEvents&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">initMouseEvent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">initMouseEvent</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">_source</span><span class="o">=</span><span class="s2">&quot;js&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">)))}},</span><span class="nx">lb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">containerId</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">containerClass</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="s2">&quot;0px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;-9999px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;1px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;1px&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">Db</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">),</span><span class="nx">a</span><span class="p">},</span><span class="nx">mb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;OBJECT&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;)</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="kc">null</span><span class="p">},</span><span class="nx">nb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">mb</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">ub</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">O</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;never&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;none&quot;</span><span class="o">:</span><span class="s2">&quot;all&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">sb</span><span class="p">(</span><span class="nx">O</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">swfPath</span><span class="o">+</span><span class="nx">rb</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">swfPath</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">lb</span><span class="p">();</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;activex&quot;</span><span class="o">===</span><span class="nx">I</span><span class="p">.</span><span class="nx">pluginType</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s1">&#39;&lt;object id=&quot;&#39;</span><span class="o">+</span><span class="nx">O</span><span class="p">.</span><span class="nx">swfObjectId</span><span class="o">+</span><span class="s1">&#39;&quot; name=&quot;&#39;</span><span class="o">+</span><span class="nx">O</span><span class="p">.</span><span class="nx">swfObjectId</span><span class="o">+</span><span class="s1">&#39;&quot; width=&quot;100%&quot; height=&quot;100%&quot; &#39;</span><span class="o">+</span><span class="p">(</span><span class="nx">l</span><span class="o">?</span><span class="s1">&#39;classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot;&#39;</span><span class="o">:</span><span class="s1">&#39;type=&quot;application/x-shockwave-flash&quot; data=&quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&gt;&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">l</span><span class="o">?</span><span class="s1">&#39;&lt;param name=&quot;movie&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s1">&#39;&quot;/&gt;&#39;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&quot;/&gt;&lt;param name=&quot;allowNetworking&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="s1">&#39;&quot;/&gt;&lt;param name=&quot;menu&quot; value=&quot;false&quot;/&gt;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;/&gt;&lt;param name=&quot;flashvars&quot; value=&quot;&#39;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s1">&#39;&quot;/&gt;&lt;/object&gt;&#39;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">ZeroClipboard</span><span class="o">=</span><span class="nx">Fb</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">replaceChild</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">j</span><span class="p">)}</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">O</span><span class="p">.</span><span class="nx">swfObjectId</span><span class="p">],</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="o">!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)),</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">},</span><span class="nx">ob</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">mb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;activex&quot;</span><span class="o">===</span><span class="nx">I</span><span class="p">.</span><span class="nx">pluginType</span><span class="o">&amp;&amp;</span><span class="s2">&quot;readyState&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="mi">4</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">readyState</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">10</span><span class="p">)}())</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">))),</span><span class="nx">I</span><span class="p">.</span><span class="nx">ready</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">I</span><span class="p">.</span><span class="nx">deactivated</span><span class="o">=</span><span class="kc">null</span><span class="p">}},</span><span class="nx">pb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">])</span><span class="k">switch</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">case</span><span class="s2">&quot;text/plain&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;text&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;air:text&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;flash:text&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;text/html&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;html&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;air:html&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;flash:html&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">html</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">html</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;application/rtf&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;text/rtf&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;rtf&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;richtext&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;air:rtf&quot;</span><span class="o">:</span><span class="k">case</span><span class="s2">&quot;flash:rtf&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">rtf</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">rtf</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="nx">data</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">formatMap</span><span class="o">:</span><span class="nx">c</span><span class="p">}}},</span><span class="nx">qb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;success&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="s2">&quot;data&quot;</span><span class="o">!==</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">continue</span><span class="p">}</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">][</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">])}</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">rb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">cacheBust</span><span class="o">===!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;?&quot;</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;noCache=&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">sb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="o">?</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="o">&amp;&amp;</span><span class="s2">&quot;length&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="p">)),</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">tb</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]),</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">h</span><span class="p">,[</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;//&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">+</span><span class="s2">&quot;//&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">])}</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">+=</span><span class="s2">&quot;trustedOrigins=&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">))),</span><span class="nx">a</span><span class="p">.</span><span class="nx">forceEnhancedClipboard</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">+=</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;forceEnhancedClipboard=true&quot;</span><span class="p">),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">swfObjectId</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">swfObjectId</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">+=</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;&amp;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;swfObjectId=&quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">swfObjectId</span><span class="p">)),</span><span class="nx">g</span><span class="p">},</span><span class="nx">tb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;//&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="o">:-</span><span class="mi">1</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;.swf&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">4</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="o">||</span><span class="kc">null</span><span class="p">},</span><span class="nx">ub</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">]),</span><span class="s2">&quot;object&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;number&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">tb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]))){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">tb</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">swfPath</span><span class="p">);</span><span class="kc">null</span><span class="o">===</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">trustedDomains</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="s2">&quot;*&quot;</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="k">return</span><span class="s2">&quot;always&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="mi">1</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;sameDomain&quot;</span><span class="o">:</span><span class="s2">&quot;always&quot;</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;never&quot;</span><span class="p">}}(),</span><span class="nx">vb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">activeElement</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">}},</span><span class="nx">wb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">xb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="mi">1</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\n\t]/g</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">yb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;cursor&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="o">||</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;auto&quot;</span><span class="o">!==</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;A&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">},</span><span class="nx">zb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">right</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="o">/</span><span class="nx">c</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="p">),</span><span class="nx">d</span><span class="p">},</span><span class="nx">Ab</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="s2">&quot;pageXOffset&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="s2">&quot;pageYOffset&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">zb</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">/</span><span class="nx">g</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">/</span><span class="nx">g</span><span class="p">));</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">c</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;width&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">right</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;height&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">bottom</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">top</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">Bb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">mb</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">))){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Ab</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">Db</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">)})}},</span><span class="nx">Cb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">ready</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setHandCursor</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">bridge</span><span class="p">.</span><span class="nx">setHandCursor</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">ready</span><span class="o">=!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">Db</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="sr">/^(?:auto|inherit)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;number&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">Db</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">)))</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;number&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">},</span><span class="nx">Eb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/[\d]+/g</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="sr">/^(pepflashplayer\.dll|libpepflashplayer\.so|pepperflashplayer\.plugin)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;chrome.plugin&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">13</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="p">)),</span><span class="o">!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">description</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">description</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">filename</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">filename</span><span class="p">)))}</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">plugins</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">plugins</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">plugins</span><span class="p">[</span><span class="s2">&quot;Shockwave Flash&quot;</span><span class="p">],</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">plugins</span><span class="p">[</span><span class="s2">&quot;Shockwave Flash 2.0&quot;</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;2.0.0.11&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">mimeTypes</span><span class="p">[</span><span class="s2">&quot;application/x-shockwave-flash&quot;</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">enabledPlugin</span><span class="p">,</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">){</span><span class="nx">j</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;ShockwaveFlash.ShockwaveFlash.7&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">GetVariable</span><span class="p">(</span><span class="s2">&quot;$version&quot;</span><span class="p">))}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;ShockwaveFlash.ShockwaveFlash.6&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;6.0.21&quot;</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;ShockwaveFlash.ShockwaveFlash&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">GetVariable</span><span class="p">(</span><span class="s2">&quot;$version&quot;</span><span class="p">))}</span><span class="k">catch</span><span class="p">(</span><span class="nx">p</span><span class="p">){</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">}}}}</span><span class="nx">I</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=</span><span class="nx">i</span><span class="o">!==!</span><span class="mi">0</span><span class="p">,</span><span class="nx">I</span><span class="p">.</span><span class="nx">outdated</span><span class="o">=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">(</span><span class="nx">J</span><span class="p">),</span><span class="nx">I</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">l</span><span class="o">||</span><span class="s2">&quot;0.0.0&quot;</span><span class="p">,</span><span class="nx">I</span><span class="p">.</span><span class="nx">pluginType</span><span class="o">=</span><span class="nx">k</span><span class="o">?</span><span class="s2">&quot;pepper&quot;</span><span class="o">:</span><span class="nx">j</span><span class="o">?</span><span class="s2">&quot;activex&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;netscape&quot;</span><span class="o">:</span><span class="s2">&quot;unknown&quot;</span><span class="p">};</span><span class="nx">Eb</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Fb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span> <span class="k">instanceof</span> <span class="nx">Fb</span><span class="o">?</span><span class="k">void</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">Fb</span><span class="p">.</span><span class="nx">_createClient</span><span class="o">&amp;&amp;</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">_createClient</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)))</span><span class="o">:</span><span class="k">new</span> <span class="nx">Fb</span><span class="p">};</span><span class="nx">r</span><span class="p">(</span><span class="nx">Fb</span><span class="p">,</span><span class="s2">&quot;version&quot;</span><span class="p">,{</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;2.1.6&quot;</span><span class="p">,</span><span class="nx">writable</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">configurable</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">enumerable</span><span class="o">:!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">config</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">P</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Q</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">isFlashUnusable</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">R</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">S</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">off</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">handlers</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">U</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">emit</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">V</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">create</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">W</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">destroy</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">X</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">setData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">clearData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Z</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">getData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">focus</span><span class="o">=</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">activate</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">_</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">blur</span><span class="o">=</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">deactivate</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">ab</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">activeElement</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">bb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))};</span><span class="kd">var</span> <span class="nx">Gb</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Hb</span><span class="o">=</span><span class="p">{},</span><span class="nx">Ib</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Jb</span><span class="o">=</span><span class="p">{},</span><span class="nx">Kb</span><span class="o">=</span><span class="p">{};</span><span class="nx">w</span><span class="p">(</span><span class="nx">O</span><span class="p">,{</span><span class="nx">autoActivate</span><span class="o">:!</span><span class="mi">0</span><span class="p">});</span><span class="kd">var</span> <span class="nx">Lb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">Gb</span><span class="o">++</span><span class="p">,</span><span class="nx">Hb</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">instance</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">elements</span><span class="o">:</span><span class="p">[],</span><span class="nx">handlers</span><span class="o">:</span><span class="p">{}},</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">emit</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()}),</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">create</span><span class="p">()},</span><span class="nx">Mb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="nx">g</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="nx">g</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">ready</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">ready</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">emit</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;ready&quot;</span><span class="p">,</span><span class="nx">client</span><span class="o">:</span><span class="k">this</span><span class="p">}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">error</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;disabled&quot;</span><span class="p">,</span><span class="s2">&quot;outdated&quot;</span><span class="p">,</span><span class="s2">&quot;unavailable&quot;</span><span class="p">,</span><span class="s2">&quot;deactivated&quot;</span><span class="p">,</span><span class="s2">&quot;overdue&quot;</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">h</span><span class="p">[</span><span class="nx">c</span><span class="p">]]){</span><span class="k">this</span><span class="p">.</span><span class="nx">emit</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;flash-&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">client</span><span class="o">:</span><span class="k">this</span><span class="p">});</span><span class="k">break</span><span class="p">}}}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">Nb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">q</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^on/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">e</span><span class="p">;)</span><span class="nx">g</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">else</span> <span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">Ob</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">[]</span><span class="o">:</span><span class="nx">x</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="nx">b</span><span class="p">},</span><span class="nx">Pb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Ub</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)){</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">));</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">w</span><span class="p">({},</span><span class="nx">db</span><span class="p">(</span><span class="nx">a</span><span class="p">),{</span><span class="nx">client</span><span class="o">:</span><span class="k">this</span><span class="p">});</span><span class="nx">Vb</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">Qb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">Wb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">nodeType</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="o">?-</span><span class="mi">1</span><span class="o">===</span><span class="nx">Jb</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Jb</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="o">=</span><span class="s2">&quot;zcClippingId_&quot;</span><span class="o">+</span><span class="nx">Ib</span><span class="o">++</span><span class="p">,</span><span class="nx">Jb</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">],</span><span class="nx">O</span><span class="p">.</span><span class="nx">autoActivate</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">Xb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]));</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">elements</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">Rb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">Wb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">c</span><span class="p">));)</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">Jb</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">c</span><span class="p">));)</span><span class="nx">f</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="mi">0</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">autoActivate</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">Yb</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">zcClippingId</span><span class="p">)}}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">Sb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">elements</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">elements</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">[]},</span><span class="nx">Tb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">unclip</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]},</span><span class="nx">Ub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">client</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">client</span><span class="o">!==</span><span class="k">this</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">elements</span><span class="p">,</span><span class="nx">c</span><span class="o">=!!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=!</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="nx">c</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">client</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">client</span><span class="o">===</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="o">||</span><span class="nx">e</span><span class="o">||</span><span class="nx">f</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">Vb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">gb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">[</span><span class="s2">&quot;*&quot;</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Hb</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">].</span><span class="nx">handlers</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]),</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="p">.</span><span class="nx">handleEvent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">handleEvent</span><span class="p">),</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">w</span><span class="p">({},</span><span class="nx">a</span><span class="p">),</span><span class="nx">hb</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,[</span><span class="nx">k</span><span class="p">],</span><span class="nx">b</span><span class="p">))}</span><span class="k">return</span> <span class="k">this</span><span class="p">}},</span><span class="nx">Wb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">[]),</span><span class="s2">&quot;number&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">Xb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;js&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">_source</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopImmediatePropagation</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()),</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">_source</span><span class="p">)},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){(</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">event</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">focus</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">Kb</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">zcClippingId</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">mouseover</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">mouseout</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">mouseenter</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">mouseleave</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">mousemove</span><span class="o">:</span><span class="nx">b</span><span class="p">}}},</span><span class="nx">Yb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Kb</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">zcClippingId</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;move&quot;</span><span class="p">,</span><span class="s2">&quot;leave&quot;</span><span class="p">,</span><span class="s2">&quot;enter&quot;</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="s2">&quot;over&quot;</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;mouse&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">delete</span> <span class="nx">Kb</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">zcClippingId</span><span class="p">]}}};</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">_createClient</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Lb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Mb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">off</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Nb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">handlers</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Ob</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">emit</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Pb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clip</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Qb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">unclip</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Rb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">elements</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Sb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">destroy</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Tb</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">.</span><span class="nx">setData</span><span class="p">(</span><span class="s2">&quot;text/plain&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setHtml</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">.</span><span class="nx">setData</span><span class="p">(</span><span class="s2">&quot;text/html&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setRichText</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">.</span><span class="nx">setData</span><span class="p">(</span><span class="s2">&quot;application/rtf&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">.</span><span class="nx">setData</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clearData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">.</span><span class="nx">clearData</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">Fb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">.</span><span class="nx">getData</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">v</span><span class="p">(</span><span class="nx">arguments</span><span class="p">))},</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="o">?</span><span class="nx">define</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Fb</span><span class="p">})</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="o">&amp;&amp;</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">Fb</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">ZeroClipboard</span><span class="o">=</span><span class="nx">Fb</span><span class="p">}(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="o">||</span><span class="nb">window</span><span class="p">}());</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line"><span class="c1">//# sourceMappingURL=ZeroClipboard.min.map</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.09150s from github-fe131-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-8827b83f56326279c38cb436d8477471e04c6632.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-00bea7823bc38eafe7970e690a19d26d3a801739.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

